%YAML:1.0
---
# be cautious that whether the rosmsg of the image is compressed
if_compressed: false
image_topic: /camera/fisheye1/image_raw

image_width: 848 
image_height: 800 
cam_fx: 285.6425
cam_fy: 285.7369
cam_cx: 412.8582
cam_cy: 389.4398
cam_d0: -0.0101437997072935
cam_d1: 0.0490523688495159
cam_d2: -0.0467962883412838
cam_d3: 0.00911895092576742
cam_d4: 0.0


CameraExtrinsics:  # camera to imu
    time_offset: 0.000
    Trans: [-0.00855251, 0.00012551, -0.04601545]
    Rot: [ -0.99998531,  -0.00306509,  0.00447121,
            0.00305151,  -0.99999071 ,  -0.00304286, 
            0.0044805,  -0.00302917,  0.99998537]


#camera calibration  pinhole MEI pinhole-radtan  radtan  camera KANNALA_BRANDT   kannala_brandt
# model_type: KANNALA_BRANDT
# camera_name: camera
# image_width: 848
# image_height: 800
# projection_parameters:
#    k2: -0.0101437997072935
#    k3: 0.0490523688495159
#    k4: -0.0467962883412838
#    k5: 0.00911895092576742
#    mu: 285.6425
#    mv: 285.7369
#    u0: 412.8582
#    v0: 389.4398

## Extrinsic parameter between IMU and Camera.
# estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
# extrinsicRotation: !!opencv-matrix
#    rows: 3
#    cols: 3
#    dt: d
#    data: [-0.99998531,  -0.00306509,  0.00447121,
#            0.00305151,  -0.99999071 ,  -0.00304286, 
#            0.0044805,  -0.00302917,  0.99998537]


#Translation from camera frame to imu frame, imu^T_cam
# extrinsicTranslation: !!opencv-matrix
#    rows: 3
#    cols: 1
#    dt: d
#   #data: [-0.0759472920952561, -0.0039320527565750, -0.0016395029500217]
#    data: [-0.00855251, 0.00012551, -0.04601545]